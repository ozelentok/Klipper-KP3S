[stepper_x]
step_pin: PE3
dir_pin: !PE2
enable_pin: !PE4
endstop_pin: !PA15
microsteps: 32
rotation_distance: 40
full_steps_per_rotation: 200
position_endstop: 0
position_max: 205
position_min: 0
homing_speed: 50
second_homing_speed: 8

[stepper_y]
step_pin: PE0
dir_pin: PB9
enable_pin: !PE1
endstop_pin: !PA12
microsteps: 32
rotation_distance: 40
full_steps_per_rotation: 200
position_endstop: -4.5
position_max: 208
position_min: -4.5
homing_speed: 50
second_homing_speed: 8

[stepper_z]
step_pin: PB5
dir_pin: !PB4
enable_pin: !PB8
endstop_pin: probe:z_virtual_endstop
microsteps: 32
rotation_distance: 8
full_steps_per_rotation: 200
position_max: 200
position_min: -2 # Allow negative z offset for BLTouch calibration
homing_speed: 6
second_homing_speed: 2

# Stepper drivers configuration through UART
# By default the steppers drivers are in standalone mode
# Enable UART by soldering the JP_N3, JP_N4 and JP_N5 pads
# Comment the following sections if UART is disabled

# [tmc2208 stepper_x]
# uart_pin: PA5
# run_current: 0.6
# stealthchop_threshold: 999999
# interpolate: true
# sense_resistor: 0.11
#
# [tmc2208 stepper_y]
# uart_pin: PC13
# run_current: 0.6
# stealthchop_threshold: 999999
# interpolate: true
# sense_resistor: 0.11
#
# [tmc2208 stepper_z]
# uart_pin: PC7
# run_current: 0.5
# stealthchop_threshold: 999999
# interpolate: true
# sense_resistor: 0.11
#
# # Ignore the builtin omc-17hs15-1504s since it uses the wrong resistance and inductance
# # Using the data from the data sheet as it fits the measured resistance
# [motor_constants kp3s-17hs15-1504s]
# resistance: 2.0
# inductance: 0.0039
# holding_torque: 0.042
# max_current: 1.5
# steps_per_revolution: 200
#
# [autotune_tmc stepper_x]
# motor: kp3s-17hs15-1504s
# tuning_goal: silent
#
# [autotune_tmc stepper_y]
# motor: kp3s-17hs15-1504s
# tuning_goal: silent
#
# [autotune_tmc stepper_z]
# motor: kp3s-17hs15-1504s
# tuning_goal: silent
# extra_hysteresis: 1
